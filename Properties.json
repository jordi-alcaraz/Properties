{
  "my_root": "Properties by class",
  "children": [
    {
      "class": "BenchmarkingProps",
      "_children": [
        {
          "name": "BRANCH_MISPREDICTION",
          "_children": [
            {
              "name": "PSC_PAPI_BR_MSP: Conditional branch instructions mispredicted"
            },
            {
              "name": "PSC_PAPI_BR_CN: Conditional branch instructions"
            },
            {
              "severity": "(PSC_PAPI_BR_CN/PSC_PAPI_BR_MSP)*(PSC_PAPI_TOT_CYC/PSC_PAPI_TOT_CYC-Phase)"
            }
          ]
        },
        {
          "name": "BENCHALLPROPS",
          "_children": [
            {
              "name": "PSC_PAPI_BR_CN: Conditional branch instructions"
            },
            {
              "name": "PSC_PAPI_BR_INS: Branch instructions"
            },
            {
              "name": "PSC_PAPI_BR_MSP: Conditional branch instructions mispredicted"
            },
            {
              "name": "PSC_PAPI_FP_OPS: Floating point operations"
            },
            {
              "name": "PSC_PAPI_INT_INS: Integer instructions"
            },
            {
              "name": "PSC_PAPI_L1_DCA: Level 1 data cache accesses"
            },
            {
              "name": "PSC_PAPI_L1_DCH: Level 1 data cache hits"
            },
            {
              "name": "PSC_PAPI_L1_DCM: Level 1 data cache misses"
            },
            {
              "name": "PSC_PAPI_L2_DCA: Level 2 data cache accesses"
            },
            {
              "name": "PSC_PAPI_L2_DCH: Level 2 data cache hits"
            },
            {
              "name": "PSC_PAPI_L2_DCM: Level 2 data cache misses"
            },
            {
              "name": "PSC_PAPI_L3_DCA: Level 3 data cache accesses"
            },
            {
              "name": "PSC_PAPI_L3_DCH: Level 3 data cache hits"
            },
            {
              "name": "PSC_PAPI_L3_DCM: Level 3 data cache misses"
            },
            {
              "name": "PSC_PAPI_LST_INS: Load/store instructions completed"
            },
            {
              "name": "PSC_PAPI_RES_STL: Cycles stalled on any resource"
            },
            {
              "name": "PSC_PAPI_TLB_TL: Total translation lookaside buffer misses"
            },
            {
              "name": "PSC_PAPI_TOT_CYC: Total cycles"
            },
            {
              "name": "PSC_PAPI_TOT_IIS: Instructions issued"
            },
            {
              "name": "PSC_PAPI_TOT_INS: Instructions completed"
            }
          ]
        },
        {
          "name": "L1D: L1 Data Cache Misses Ratio Property",
          "_children": [
            {
              "name": "PSC_PAPI_TOT_CYC: Total cycles"
            },
            {
              "name": "PSC_PAPI_L1_DCM: Level 1 data cache misses"
            },
            {
              "name": "PSC_PAPI_L1_DCH: Level 1 data cache hits"
            },
            {
              "severity": "(PSC_PAPI_L1_DCM/(PSC_PAPI_L1_DCM+PSC_PAPI_L1_DCH)*(PSC_PAPI_TOT_CYC/PSC_PAPI_TOT_CYC-Phase))"
            }
          ]
        },
        {
          "name": "L2MISSES: L2 Cache Miss Ratio Property",
          "_children": [
            {
              "name": "PSC_PAPI_TOT_CYC: Total cycles"
            },
            {
              "name": "PSC_PAPI_L2_TCM: Level 2 cache misses"
            },
            {
              "name": "PSC_PAPI_L2_TCH: Level 2 total cache hits"
            },
            {
              "severity": "(PSC_PAPI_L2_TCM/(PSC_PAPI_L2_TCM+PSC_PAPI_L2_TCH))*(PSC_PAPI_TOT_CYC/PSC_PAPI_TOT_CYC-Phase)"
            }
          ]
        },
        {
          "name": "EXECTIMEIMPORTANCE: Return the execution time of the region in thread 0 as severity.",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "severity": "(PSC_EXECUTION_TIME/PSC_EXECUTION_TIME-Phase)*100"
            }
          ]
        },
        {
          "name": "PERFORMANCECOUNTERS: Performance counters as program signature.",
          "_children": [
            {
              "name": "PSC_PAPI_L1_DCM: Level 1 data cache misses"
            },
            {
              "name": "PSC_PAPI_L1_ICM: Level 1 instructions cache misses"
            },
            {
              "name": "PSC_PAPI_L2_DCM: Level 2 data cache misses"
            },
            {
              "name": "PSC_PAPI_L3_DCM: Level 3 data cache misses"
            },
            {
              "name": "PSC_PAPI_L1_TCM: Level 1 total cache misses"
            },
            {
              "name": "PSC_PAPI_L2_TCM: Level 2 total cache misses"
            },
            {
              "name": "PSC_PAPI_L3_TCM: Level 3 total cache misses"
            },
            {
              "name": "PSC_PAPI_TLB_DM: Data translation lookaside buffer misses"
            },
            {
              "name": "PSC_PAPI_TLB_IM: Instruction translation lookaside buffer misses"
            },
            {
              "name": "PSC_PAPI_BR_CN: Conditional branch instructions"
            },
            {
              "name": "PSC_PAPI_BR_MSP: Conditional branch instructions mispredicted"
            },
            {
              "name": "PSC_PAPI_TOT_INS: Instructions completed"
            },
            {
              "name": "PSC_PAPI_FP_INS: Floating point instructions"
            },
            {
              "name": "PSC_PAPI_LD_INS: Load instructions"
            },
            {
              "name": "PSC_PAPI_SR_INS: Store instructions"
            },
            {
              "name": "PSC_PAPI_BR_INS: Branch instructions"
            },
            {
              "name": "PSC_PAPI_TOT_CYC: Total cycles"
            },
            {
              "name": "PSC_PAPI_L2_DCH: Level 2 data cache hits"
            },
            {
              "name": "PSC_PAPI_L2_DCA: Level 2 data cache accesses"
            },
            {
              "name": "PSC_PAPI_L3_DCA: Level 3 data cache accesses"
            },
            {
              "name": "PSC_PAPI_L2_ICH: Level 2 instructions cache hits"
            },
            {
              "name": "PSC_PAPI_L2_ICR: Level 2 instructions cache reads"
            },
            {
              "name": "PSC_PAPI_L3_TCA: Level 3 total cache accesses"
            },
            {
              "name": "PSC_PAPI_FP_OPS: Floating point operations"
            },
            {
              "name": "PSC_EXECUTION_TIME: Execution time"
            },
            {
              "name": "PSC_PAPI_TOT_INS: Instructions completed"
            },
            {
              "severity": "Time"
            }
          ]
        }
      ]
    },
    {
      "class": "Energy",
      "_children": [
        {
          "name": "ENERGY_CONSUMPTION: Cost of Ownership property",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME: Execution time"
            },
            {
              "name": "PSC_TASKS_CREATED: ???"
            },
            {
              "severity": "PSC_EXECUTION_TIME*(0.38*PSC_TASKS_CREATED)"
            }
          ]
        },
        {
          "name": "ENERGY_CONSUMPTION: Energy consumption property",
          "_children": [
            {
              "name": "PSC_ENOPT_ALL_CORES: Provides energy consumption of all cores on a node"
            },
            {
              "severity": "Energy consumption"
            }
          ]
        },
        {
          "name": "ENERGY_INEFFICIENT: Return energy spent per floating point instruction, indicating energy inefficient regions, as severity.",
          "_children": [
            {
              "name": "PSC_ENOPT_ALL_CORES: Provides energy consumption of all cores on a node"
            },
            {
              "name": "PSC_PAPI_FP_INS: Floating point instructions"
            },
            {
              "severity": "PSC_PAPI_FP_INS/PSC_ENOPT_ALL_CORES"
            }
          ]
        },
        {
          "name": "MEMORY_BOUND: Return number of L3 cache misses per FLOP, indicating memory bound regions, as severity.",
          "_children": [
            {
              "name": "PSC_PAPI_L3_TCM: Level 3 total cache misses"
            },
            {
              "name": "PSC_PAPI_FP_INS: Floating point instructions"
            },
            {
              "severity": "PSC_PAPI_L3_TCM/PSC_PAPI_FP_INS"
            }
          ]
        },
        {
          "name": "POWER_USED",
          "_children": [
            {
              "name": "PSC_ENOPT_ALL_CORES: Provides energy consumption of all cores on a node"
            },
            {
              "name": "PSC_EXECUTION_TIME: Execution time"
            },
            {
              "severity": "PSC_ENOPT_ALL_CORES/PSC_EXECUTION_TIME"
            }
          ]
        },
        {
          "name": "ENERGY_SUITED: Return the execution time of the region in thread 0 as severity.",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME: Execution time"
            },
            {
              "name": "PSC_PAPI_L3_TCM: Level 3 cache total cache misses"
            },
            {
              "name": "PSC_PAPI_L2_TCM: Level 2 total cache misses"
            },
            {
              "name": "PSC_PAPI_TOT_CYC: Total cycles"
            },
            {
              "name": "PSC_PAPI_TOT_INS: Instructions completed"
            },
            {
              "name": "PSC_ENOPT_ALL_CORES:  Provides energy consumption of all cores on a node."
            },
            {
              "name": "PSC_ENOPT_ALL_DRAMS:  Provides energy consumption of DRAM modules on a node."
            },
            {
              "severity": "PSC_EXECUTION_TIME/PSC_INSTANCES"
            }
          ]
        }
      ]
    },
    {
      "class": "GPUTesting",
      "_children": [
        {
          "name": "CUDA_ACHIEVEDOCCUPANCY: Total number of cycles a multiprocessor has at least one active warp",
          "_children": [
            {
              "name": "PSC_CUPTI_DD_ACTIVE_CYCLES"
            },
            {
              "name": "PSC_CUPTI_DD_ACTIVE_WARPS"
            },
            {
              "severity":"100*(PSC_CUPTI_DD_ACTIVE_WARPS/PSC_CUPTI_DD_ACTIVE_CYCLES)/48"
            }
          ]
        },
        {
          "name": "CUDA_ACTIVECYCLES: total number of cycles a multiprocessor has at least one active warp",
          "_children": [
            {
              "name": "PSC_CUPTI_DD_ACTIVE_CYCLES"
            },
            {
              "severity": "PSC_CUPTI_DD_ACTIVE_CYCLES"
            }
          ]
        },
        {
          "name": "CUDA_BRANCHEFFICIENCY: GPU Ratio of non-divergent branches to total branches property",
          "_children": [
            {
              "name": "PSC_CUPTI_DD_DIVERGENT_BRANCH"
            },
            {
              "name": "PSC_CUPTI_DD_BRANCH"
            },
            {
              "severity": "(PSC_CUPTI_DD_BRANCH-PSC_CUPTI_DD_DIVERGENT_BRANCH )/ PSC_CUPTI_DD_BRANCH"
            }
          ]
        },
        {
          "name": "CUDA_BYTESTRANSFERED: amount of bytes transfered between host and device",
          "_children": [
            {
              "name": "PSC_CUDA_BYTES_TRANSFERRED"
            },
            {
              "severity": "PSC_CUDA_BYTES_TRANSFERRED"
            }
          ]
        },
        {
          "name": "CUDA_EXECUTIONTIME: kernel execution time property",
          "_children": [
            {
              "name": "PSC_CUDA_KERNEL_EXECUTION_TIME"
            },
            {
              "severity":  "PSC_CUDA_KERNEL_EXECUTION_TIME"
            }
          ]
        },
        {
          "name": "CUDA_INSTRUCTIONSEXECUTED: Number of instructions executed on GPU",
          "_children": [
            {
              "name": "PSC_CUPTI_DD_INST_EXECUTED"
            },
            {
              "severity": "PSC_CUPTI_DD_INST_EXECUTED"
            }
          ]
        },
        {
          "name": "CUDA_TRANSFERTIME: Time to transfer data from host to device property",
          "_children": [
            {
              "name": "PSC_CUDA_TRANSFER_EXECUTION_TIME"
            },
            {
              "severity": "PSC_CUDA_TRANSFER_EXECUTION_TIME" 
            }
          ]
        }
      ]
    },
    {
      "class": "mpi",
      "_children": [
        {
          "name": "EAGERLIMITDEPENDENT",
          "_children": [
            {
              "name": "PSC_MPI"
            },
            {
              "name": "PSC_MPI_MSG_P2P_TOT"
            },
            {
              "name": "PSC_MPI_MSG_P2P_THR"
            },
            {
              "name": "PSC_MPI_MSG_FREQ_2K"
            },
            {
              "name": "PSC_MPI_MSG_FREQ_4K"
            },
            {
              "name": "PSC_MPI_MSG_FREQ_8K"
            },
            {
              "name": "PSC_MPI_MSG_FREQ_16K"
            },
            {
              "name": "PSC_MPI_MSG_FREQ_32K"
            },
            {
              "name": "PSC_MPI_MSG_FREQ_64K"
            },
            {
              "severity": "PSC_MPI_MSG_P2P_THR/PSC_MPI_MSG_P2P_TOT"
            }
          ]
        },
        {
          "name": "MPITIME",
          "_children": [
            {
              "name": "PSC_MPI"
            },
            {
              "name": "PSC_EXECUTION_TIME: Execution time"
            },
            {
              "severity": "PSC_EXECUTION_TIME-Phase/PSC_MPI_TIME_SPENT"
            }

          ]
        },
        {
          "name": "MPIPROP: MpiLate ?????????????????????",
          "_children": [
            {
              "name": "PSC_MPI"
            },
            {
              "name": "PSC_EXECUTION_TIME: Execution time"
            },
            {
              "severity":  "Late time*100/PSC_EXECUTION_TIME"
            }
          ]
        },
        {
          "name": "OVERLOADEDMASTER: ",
          "_children": [
            {
              "name": "PSC_MPI"
            },
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "severity":  "Late time*100/PSC_EXECUTION_TIME"
            }
          ]
        },
        {
          "name": "MPIPROP: Check execcive MPI time due to large/small messages",
          "_children": [
            {
              "name": "PSC_MPI"
            },
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "severity":  "PSC_MPI_TIME_SPENT*100/PSC_EXECUTION_TIME"
            }
          ]
        }
      ]
    },
    {
      "class": "OpenCL",
      "_children": [
        {
          "name": "OPENCL_KERNELEXECTIME: total amount of time spent on kernel execution",
          "_children": [
            {
              "name": "PSC_OPENCL_KERNEL_EXECUTION_TIME"
            },
            {
              "severity": "PSC_OPENCL_KERNEL_EXECUTION_TIME"
            }
          ]
        }
      ]
    },
    {
      "class": "openmp",
      "_children": [
        {
          "name": " CRITICALREGIONOVERHEAD_OMPREGION: critical section overhead",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_CRITICAL_REGION_CYCLE"
            },
            {
              "severity":"Critical time in %"
            }
          ]
        },
        {
          "name": " ATOMICREGIONOVERHEAD_OMPREGION: atomic section overhead",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_CRITICAL_REGION_CYCLE"
            },
            {
              "severity":"Critical time in %"
            }
          ]
        },
        {
          "name": " FLUSHREGIONOVERHEAD_OMPREGION: flushed section overhead",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_CRITICAL_REGION_CYCLE"
            },
            {
              "severity":"Critical time in %"
            }
          ]
        },
        {
          "name": " IMBALANCE_IN_ORDERED_LOOP_OMP: Imbalance in ORDERED loop",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_CRITICAL_REGION_CYCLE"
            },
            {
              "severity":"(maxWaitTime-minWaitTime)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " LOADIMBALANCEPARALLELSECTION : Load Imbalance in Parallel Sections",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_IMPLICIT_BARRIER_TIME"
            },
            {
              "severity":"(maxWaitTime-minWaitTime)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " UNEVEN_SECTION_OMP : Load Imbalance in Parallel Sections",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_IMPLICIT_BARRIER_TIME"
            },
            {
              "severity":"(maxWaitTime-minWaitTime)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " NOT_ENOUGH_SECTION_OMP : Load Imbalance in Parallel Sections",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_IMPLICIT_BARRIER_TIME"
            },
            {
              "severity":"(maxWaitTime-minWaitTime)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " IMBALANCEOMPBARRIER: Load Imbalance in Explicit Barrier property",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_OMP_BARRIER_CYCLE"
            },
            {
              "severity":"(maxWaitTime-minWaitTime)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " LOADIMBALANCEPARALLELREGION: Load Imbalance in Parallel Region",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_IMPLICIT_BARRIER_TIME"
            },
            {
              "severity":"(maxWaitTime-minWaitTime)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " LOADIMBALANCEPARALLELLOOP: Load Imbalance in Parallel loop",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_IMPLICIT_BARRIER_TIME"
            },
            {
              "severity":"(maxWaitTime-minWaitTime)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " LOADIMBALANCEWORKSHAREREGION: Load Imbalance in Workshare Region",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_IMPLICIT_BARRIER_TIME"
            },
            {
              "severity":"(maxWaitTime-minWaitTime)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " LOADIMBALANCEPARALLELSECTION: Load Imbalance in Parallel Section",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_IMPLICIT_BARRIER_TIME"
            },
            {
              "severity":"(maxWaitTime-minWaitTime)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " LOADIMBALANCEOMPREGION: Load Imbalance in OMP Region",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_IMPLICIT_BARRIER_TIME"
            },
            {
              "severity":"(maxWaitTime-minWaitTime)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " STARTUPSHUTDOWNOVERHEAD: Parallel Region Start up and Shutdown overhead",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_PARALLEL_REGION_CYCLE"
            },
            {
              "name": "PSC_PARALLEL_REGION_BODY_CYCLE"
            },
            {
              "severity":"(PSC_PARALLEL_REGION_CYCLE-PSC_PARALLEL_REGION_BODY_CYCLE)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " SERIALIZATIONCRITICALREGIONOVERHEAD_OMPREGION: Serialization in Critical region",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_CRITICAL_REGION_CYCLE"
            },
            {
              "severity": "maxWaitTime/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " SEQUENTIALINMASTER: Sequential Computation in Master Region",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_MASTER_BODY_CYCLE"
            },
            {
              "severity": "PSC_MASTER_BODY_CYCLE/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " SEQUENTIALINORDEREDLOOP: Sequential Computation in Ordered Loop ",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_ORDERED_REGION_CYCLE"
            },
            {
              "severity": "sum(PSC_ORDERED_REGION_CYCLE)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " SEQUENTIALINSINGLE: Sequential Computation in Single Region ",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_SINGLE_REGION_CYCLE"
            },
            {
              "severity": "PSC_SINGLE_REGION_CYCLE/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " USERREGIONEXECTIME: Hot OpenMP region execution time in the application ",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "severity": "PSC_EXECUTION_TIME/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " MAINREGIONEXECTIME: Hot OpenMP region execution time in the application ",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "severity": "PSC_EXECUTION_TIME/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " CALLREGIONEXECTIME: Hot OpenMP region execution time in the application ",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "severity": "max(PSC_EXECUTION_TIME_threads)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " SUBREGIONEXECTIME: Hot OpenMP region execution time in the application ",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "severity": "PSC_EXECUTION_TIME-region/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " OMPFORREGIONEXECTIME: Hot OpenMP region execution time in the application ",
          "_children": [
            {
              "name": "PSC_OMP_DO_REGION_CYCLE"
            },
            {
              "severity": "max(PSC_EXECUTION_TIME_threads)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " PARALLELREGIONEXECTIME: Hot OpenMP region execution time in the application ",
          "_children": [
            {
              "name": "PSC_PARALLEL_REGION_CYCLE"
            },
            {
              "severity": "PSC_PARALLEL_REGION_CYCLE/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " EMPTYTASKINTASKREGION: Empty task in tasks ",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_TASK_REGION_CYCLE"
            },
            {
              "name": "PSC_TASK_REGION_BODY_CYCLE"
            },
            {
              "severity": "sum(PSC_TASK_REGION_CYCLE_thread)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " OVERHEADDUETOSMALLTASK: Overhead due to less workload in task ",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_TASK_REGION_CYCLE"
            },
            {
              "severity": "(sum(PSC_TASK_REGION_CYCLE)-sum(PSC_TASK_REGION_BODY_CYCLE))/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " TASKREGIONOVERHEAD: Task Creation overhead ",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_TASK_REGION_CYCLE"
            },
            {
              "severity": "max(PSC_TASK_REGION_CYCLE_thread)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " TOOFINEGRANULARTASKS: Task Granularity ",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_TASK_REGION_CYCLE"
            },
            {
              "name": "PSC_TASK_REGION_BODY_CYCLE"
            },
            {
              "severity": "max(PSC_TASK_REGION_CYCLE_thread)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " IMBALANCEDTASKREGION: Task region with imbalanced distribution ",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_TASK_REGION_CYCLE"
            },
            {
              "name": "PSC_TASK_REGION_BODY_CYCLE"
            },
            {
              "severity": "avg(max(PSC_TASK_REGION_BODY_CYCLE)-Time_thread)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " IMBALANCEDUETOUNEVENDISTRIBUTIONOFTASKS: Task region with imbalanced distribution ",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_TASK_REGION_CYCLE"
            },
            {
              "name": "PSC_TASK_REGION_BODY_CYCLE"
            },
            {
              "severity": "avg(max(???)-Time_thread)/PSC_EXECUTION_TIME*100"
            }
          ]
        },
        {
          "name": " NUMBEROFTASKSSMALLERTHANNUMBEROFTHREADS: Task region with imbalanced distribution ",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_TASK_REGION_CYCLE"
            },
            {
              "name": "PSC_TASK_REGION_BODY_CYCLE"
            },
            {
              "severity": "avg(max(PSC_TASK_REGION_BODY_CYCLE)-Time_thread)/PSC_EXECUTION_TIME*100"
            }
          ]
        }
      ]
    },
    {
      "class": "overhead",
      "_children": [
        {
          "name": "OVERHEAD: High Instrumentation overhead-Itanium2"
        },
        {
          "name": "REQUIREDREGION: -Itanium2"
        },
        {
          "name": "HIGHINCLOVERHEAD : Identifies a region with high MRI overhead",
          "_children": [
            {
              "name": "PSC_MRI_OVERHEAD"
            },
            {
              "name": "PSC_MRI_EXCL_OVERHEAD"
            },
            {
              "name": "PSC_PAPI_TOT_CYC"
            },
            {
              "severity": "(PSC_MRI_OVERHEAD-PSC_MRI_EXCL_OVERHEAD)/PSC_PAPI_TOT_CYC*100"
            }
          ]
        },
        {
          "name": "HIGHEXCLOVERHEAD : Identifies a region with high MRI overhead",
          "_children": [
            {
              "name": "PSC_MRI_OVERHEAD"
            },
            {
              "name": "PSC_MRI_EXCL_OVERHEAD"
            },
            {
              "name": "PSC_PAPI_TOT_CYC - Inside region"
            },
            {
              "name": "PSC_PAPI_TOT_CYC - Outside region"
            },
            {
              "severity": "PSC_MRI_EXCL_OVERHEAD/PSC_PAPI_TOT_CYC*100"
            }
          ]
        }
      ]
    },
    {
      "class": "Pipeline",
      "_children": [
        {
          "name": "PIPESTAGEEXECTIME: Execution time of pipeline stage for Vienna pattern",
          "_children": [
            {
              "name": "PSC_PIPE_STAGEEXEC_TIME"
            },
            {
              "severity": "PSC_PIPE_STAGEEXEC_TIME/NANOSEC_PER_SEC_DOUBLE"
            }
          ]
        },
        {
          "name": "PIPESTAGEBUFWAITTIME: Buffer wait time of pipeline stage for Vienna pattern",
          "_children": [
            {
              "name": "PSC_PIPE_BUFOUTP_TIME"
            },
            {
              "severity": "PSC_PIPE_BUFOUTP_TIME/NANOSEC_PER_SEC_DOUBLE"
            }
          ]
        },
        {
          "name": "PIPEEXECTIME: Execution time of pipeline for Vienna pattern",
          "_children": [
            {
              "name": "PSC_PIPE_EXEC_TIME"
            },
            {
              "severity": "PSC_PIPE_EXEC_TIME/NANOSEC_PER_SEC_DOUBLE"
            }
          ]
        }
      ]
    },
    {
      "class": "tuning",
      "_children": [
        {
          "name": "EXECTIME: Return the execution time of the region in thread 0",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "severity": "PSC_EXECUTION_TIME"
            }
          ]
        },
        {
          "name": "HPCCONDITIONAL: Returns important metrics used as criterium on the plugin selection process in adaptive-sequence plugin",
          "_children": [
            {
              "name": "PSC_EXECUTION_TIME"
            },
            {
              "name": "PSC_INSTANCES"
            },
            {
              "name": "PSC_MPI"
            },
            {
              "name": "PSC_PAPI_TOT_INS"
            },
            {
              "name": "PSC_ENOPT_ALL_CORES"
            },
            {
              "name": "PSC_ENOPT_ALL_DRAMS"
            },
            {
              "severity": "PSC_EXECUTION_TIME/PSC_INSTANCES"
            }
          ]
        },
        {
          "name": "ACTIVECYCLESOBJECTIVE: total number of cycles a multiprocessor has at least one active warp",
          "_children": [
            {
              "name": "PSC_CUPTI_DD_ACTIVE_CYCLES"
            },
            {
              "severity": "PSC_CUPTI_DD_ACTIVE_CYCLES"
            }
          ]
        }
      ]
    },
    {
      "name": "Westmere --- Not Needed"
    }
  ]
}